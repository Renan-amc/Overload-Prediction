version: '3.8'

services:
  app:
    image: overload-app:latest
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - overload-network

  workspace:
    image: overload-workspace:latest
    build:
      context: .
      dockerfile: docker/workspace/Dockerfile
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - overload-network
    tty: true
    stdin_open: true

  nginx:
    image: nginx:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      endpoint_mode: dnsrr
    ports:
      - target: 80
        published: 8085
        protocol: tcp
        mode: host
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - overload-network
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - target: 3306
        published: 3306
        protocol: tcp
        mode: host
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: overload
      MYSQL_USER: overload_user
      MYSQL_PASSWORD: secret
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - overload-network
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - target: 6379
        published: 6379
        protocol: tcp
        mode: host
    volumes:
      - redis-data:/data
    networks:
      - overload-network

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local

networks:
  overload-network:
    driver: overlay
    attachable: true