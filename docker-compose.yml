version: '3.8'

services:
  # PHP-FPM (Aplicação Laravel) - 3 RÉPLICAS
  app:
    image: overload-app:latest
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - overload-network

  workspace:
    image: overload-workspace:latest
    build:
      context: .
      dockerfile: docker/workspace/Dockerfile
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - overload-network
    tty: true
    stdin_open: true

  nginx:
    image: nginx:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "8085:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - overload-network

  mysql:
    image: mysql:8.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: overload
      MYSQL_USER: overload_user
      MYSQL_PASSWORD: secret
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - overload-network
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - overload-network

  netdata:
    image: netdata/netdata:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "19999:19999"
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    volumes:
      - netdata-config:/etc/netdata
      - netdata-lib:/var/lib/netdata
      - netdata-cache:/var/cache/netdata
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/os-release:/host/etc/os-release:ro
    networks:
      - overload-network
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - NETDATA_DISABLE_CLOUD=1

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
  netdata-config:
    driver: local
  netdata-lib:
    driver: local
  netdata-cache:
    driver: local

networks:
  overload-network:
    driver: overlay